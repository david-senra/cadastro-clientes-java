/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dsenra;

import dsenra.dao.ClienteMapDao;
import dsenra.domain.Cliente;
import dsenra.dao.IClienteDAO;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.RowSorter;
import static javax.swing.SortOrder.ASCENDING;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author David Senra
 */
public class GuiCadastroClientes extends javax.swing.JFrame {

        
    private Boolean resultadoCadastro;
    private final DefaultTableModel modelo = new DefaultTableModel();
    JTextField[] listaCampos;
    
    ImageIcon icon2 = new ImageIcon("src/main/java/dsenra/errorIcon.png");
    ImageIcon icon3 = new ImageIcon("src/main/java/dsenra/successImage.png");
    ImageIcon icon4 = new ImageIcon("src/main/java/dsenra/questionIcon.png");
    
    private TableRowSorter<TableModel> sorter;
    private final List<RowSorter.SortKey> sortKeys = new ArrayList<>();
    private final int columnIndexToSort = 0;
    private int linhaSelecionada;
    
    private final IClienteDAO iClienteDao = new ClienteMapDao();
    
    private void changeHandler() {
        if (campoNome.getText().equals("") &&
            campoTel.getText().equals("") &&
            campoEndereco.getText().equals("") &&
            campoNumero.getText().equals("") &&
            campoCidade.getText().equals("") &&
            campoEstado.getText().equals("")) {
            botaoLimpar.setEnabled(false);
        }
        else {
            botaoLimpar.setEnabled(true);
        }
    }
    
    private boolean eNumerico(String valor) {
        if (valor == null) {
            return false;
        }
        try {
            Double.valueOf(valor);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }
    
    /**
     * Creates new form GuiCadastroClientes
     */
    public GuiCadastroClientes() {
        initComponents();
        initCustomComponents();
        this.setLocationRelativeTo(null);
        this.listaCampos = new JTextField[]{ campoNome, campoTel, campoCpf, campoEndereco, campoCidade, campoEstado, campoNumero };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JanelaSair = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        BotaoSairPrograma = new javax.swing.JButton();
        BotaoNaoSairPrograma = new javax.swing.JButton();
        JanelaErro = new javax.swing.JDialog();
        mensagemErro = new javax.swing.JLabel();
        botaoOkErro = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        JanelaSucesso = new javax.swing.JDialog();
        mensagemSucesso = new javax.swing.JLabel();
        botaoOkSucesso = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        JanelaConfirmar = new javax.swing.JDialog();
        mensagemConfirmacao = new javax.swing.JLabel();
        botaoConfirmar = new javax.swing.JButton();
        botaoNaoConfirma = new javax.swing.JButton();
        painelFormulario = new javax.swing.JPanel();
        campoNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        campoTel = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        campoCpf = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        campoCidade = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        campoEndereco = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        campoNumero = new javax.swing.JTextField();
        campoEstado = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TabContainer = new javax.swing.JTabbedPane();
        TabGeral = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        botaoLimpar = new javax.swing.JButton();
        botaoSalvar = new javax.swing.JButton();
        TabEdicao = new javax.swing.JPanel();
        botaoExcluir = new javax.swing.JButton();
        botaoAtualizar = new javax.swing.JButton();
        canvasTabela = new javax.swing.JPanel();
        painelTabela = new javax.swing.JScrollPane();
        tabelaClientes = new javax.swing.JTable();
        barraMenu = new javax.swing.JMenuBar();
        barraMenuItemSair = new javax.swing.JMenu();
        menuItemSair = new javax.swing.JMenuItem();

        JanelaSair.setTitle("SAIR");
        JanelaSair.setAlwaysOnTop(true);
        JanelaSair.setMinimumSize(new java.awt.Dimension(180, 160));
        JanelaSair.setResizable(false);

        jLabel1.setText("Deseja Sair?");

        BotaoSairPrograma.setText("Sim");
        BotaoSairPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSairProgramaActionPerformed(evt);
            }
        });

        BotaoNaoSairPrograma.setText("NÃ£o");
        BotaoNaoSairPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoNaoSairProgramaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JanelaSairLayout = new javax.swing.GroupLayout(JanelaSair.getContentPane());
        JanelaSair.getContentPane().setLayout(JanelaSairLayout);
        JanelaSairLayout.setHorizontalGroup(
            JanelaSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JanelaSairLayout.createSequentialGroup()
                .addGroup(JanelaSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JanelaSairLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(BotaoSairPrograma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BotaoNaoSairPrograma))
                    .addGroup(JanelaSairLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        JanelaSairLayout.setVerticalGroup(
            JanelaSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JanelaSairLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(JanelaSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoSairPrograma)
                    .addComponent(BotaoNaoSairPrograma))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        JanelaErro.setTitle("ERRO");
        JanelaErro.setAlwaysOnTop(true);
        JanelaErro.setMinimumSize(new java.awt.Dimension(370, 160));
        JanelaErro.setResizable(false);

        mensagemErro.setText("Todos os campos devem estar preenchidos!");
        mensagemErro.setMaximumSize(new java.awt.Dimension(250, 16));
        mensagemErro.setMinimumSize(new java.awt.Dimension(250, 40));
        mensagemErro.setPreferredSize(new java.awt.Dimension(250, 40));

        botaoOkErro.setText("OK");
        botaoOkErro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoOkErroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JanelaErroLayout = new javax.swing.GroupLayout(JanelaErro.getContentPane());
        JanelaErro.getContentPane().setLayout(JanelaErroLayout);
        JanelaErroLayout.setHorizontalGroup(
            JanelaErroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JanelaErroLayout.createSequentialGroup()
                .addGroup(JanelaErroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JanelaErroLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mensagemErro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JanelaErroLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(botaoOkErro)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        JanelaErroLayout.setVerticalGroup(
            JanelaErroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JanelaErroLayout.createSequentialGroup()
                .addGroup(JanelaErroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JanelaErroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JanelaErroLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(mensagemErro, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoOkErro)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        JanelaSucesso.setTitle("SUCESSO");
        JanelaSucesso.setAlwaysOnTop(true);
        JanelaSucesso.setMinimumSize(new java.awt.Dimension(370, 160));
        JanelaSucesso.setResizable(false);

        mensagemSucesso.setText("Cadastro Realizado com Sucesso!");
        mensagemSucesso.setMaximumSize(new java.awt.Dimension(250, 16));
        mensagemSucesso.setMinimumSize(new java.awt.Dimension(250, 40));
        mensagemSucesso.setPreferredSize(new java.awt.Dimension(250, 40));

        botaoOkSucesso.setText("OK");
        botaoOkSucesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoOkSucessoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JanelaSucessoLayout = new javax.swing.GroupLayout(JanelaSucesso.getContentPane());
        JanelaSucesso.getContentPane().setLayout(JanelaSucessoLayout);
        JanelaSucessoLayout.setHorizontalGroup(
            JanelaSucessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JanelaSucessoLayout.createSequentialGroup()
                .addGroup(JanelaSucessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JanelaSucessoLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mensagemSucesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JanelaSucessoLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(botaoOkSucesso)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        JanelaSucessoLayout.setVerticalGroup(
            JanelaSucessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JanelaSucessoLayout.createSequentialGroup()
                .addGroup(JanelaSucessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JanelaSucessoLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(mensagemSucesso, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JanelaSucessoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoOkSucesso)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        JanelaConfirmar.setTitle("SAIR");
        JanelaConfirmar.setAlwaysOnTop(true);
        JanelaConfirmar.setMinimumSize(new java.awt.Dimension(180, 160));
        JanelaConfirmar.setResizable(false);

        mensagemConfirmacao.setText("Confirmar?");

        botaoConfirmar.setText("Sim");
        botaoConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConfirmarActionPerformed(evt);
            }
        });

        botaoNaoConfirma.setText("NÃ£o");
        botaoNaoConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoNaoConfirmaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JanelaConfirmarLayout = new javax.swing.GroupLayout(JanelaConfirmar.getContentPane());
        JanelaConfirmar.getContentPane().setLayout(JanelaConfirmarLayout);
        JanelaConfirmarLayout.setHorizontalGroup(
            JanelaConfirmarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JanelaConfirmarLayout.createSequentialGroup()
                .addGroup(JanelaConfirmarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JanelaConfirmarLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(botaoConfirmar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoNaoConfirma))
                    .addGroup(JanelaConfirmarLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(mensagemConfirmacao)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        JanelaConfirmarLayout.setVerticalGroup(
            JanelaConfirmarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JanelaConfirmarLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(mensagemConfirmacao, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(JanelaConfirmarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoConfirmar)
                    .addComponent(botaoNaoConfirma))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        painelFormulario.setPreferredSize(new java.awt.Dimension(750, 200));

        campoNome.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                campoNomePropertyChange(evt);
            }
        });

        jLabel2.setText("Telefone:");

        jLabel3.setText("Nome:");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        campoCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCpfActionPerformed(evt);
            }
        });

        jLabel9.setText("CPF:");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(campoCpf)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jLabel4.setText("Cidade:");

        jLabel7.setText("EndereÃ§o:");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        campoEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoEnderecoActionPerformed(evt);
            }
        });

        jLabel10.setText("NÃºmero:");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        campoNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNumeroActionPerformed(evt);
            }
        });

        jLabel8.setText("Estado:");

        javax.swing.GroupLayout painelFormularioLayout = new javax.swing.GroupLayout(painelFormulario);
        painelFormulario.setLayout(painelFormularioLayout);
        painelFormularioLayout.setHorizontalGroup(
            painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFormularioLayout.createSequentialGroup()
                .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelFormularioLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(campoTel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                            .addComponent(campoNome, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelFormularioLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoCidade, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                            .addComponent(campoEndereco))
                        .addGap(26, 26, 26)
                        .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(painelFormularioLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoEstado, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                            .addComponent(campoNumero))))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        painelFormularioLayout.setVerticalGroup(
            painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelFormularioLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelFormularioLayout.createSequentialGroup()
                        .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(campoTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(campoEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10))
                    .addComponent(campoNumero, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(campoCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(campoEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Clientes");
        setAlwaysOnTop(true);
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(0, 360));
        setPreferredSize(new java.awt.Dimension(700, 350));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        TabContainer.setMinimumSize(new java.awt.Dimension(94, 350));
        TabContainer.setPreferredSize(new java.awt.Dimension(700, 350));
        TabContainer.setRequestFocusEnabled(false);
        TabContainer.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                TabContainerPropertyChange(evt);
            }
        });

        TabGeral.setMinimumSize(new java.awt.Dimension(0, 240));
        TabGeral.setPreferredSize(new java.awt.Dimension(748, 120));

        botaoLimpar.setText("Limpar");
        botaoLimpar.setEnabled(false);
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        botaoSalvar.setText("Cadastrar");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(241, Short.MAX_VALUE)
                .addComponent(botaoSalvar)
                .addGap(51, 51, 51)
                .addComponent(botaoLimpar)
                .addGap(212, 212, 212))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoLimpar)
                    .addComponent(botaoSalvar))
                .addContainerGap())
        );

        javax.swing.GroupLayout TabGeralLayout = new javax.swing.GroupLayout(TabGeral);
        TabGeral.setLayout(TabGeralLayout);
        TabGeralLayout.setHorizontalGroup(
            TabGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabGeralLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        TabGeralLayout.setVerticalGroup(
            TabGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TabGeralLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        TabContainer.addTab("Cadastrar", TabGeral);

        TabEdicao.setMinimumSize(new java.awt.Dimension(0, 750));
        TabEdicao.setPreferredSize(new java.awt.Dimension(739, 750));

        botaoExcluir.setText("Excluir");
        botaoExcluir.setEnabled(false);
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });

        botaoAtualizar.setText("Atualizar");
        botaoAtualizar.setEnabled(false);
        botaoAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtualizarActionPerformed(evt);
            }
        });

        tabelaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Telefone", "CPF", "EndereÃ§o", "NÃºmero", "Cidade", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaClientes.setGridColor(new java.awt.Color(255, 255, 255));
        tabelaClientes.setShowGrid(true);
        tabelaClientes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabelaClientesFocusGained(evt);
            }
        });
        tabelaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaClientesMouseClicked(evt);
            }
        });
        tabelaClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tabelaClientesKeyTyped(evt);
            }
        });
        painelTabela.setViewportView(tabelaClientes);
        if (tabelaClientes.getColumnModel().getColumnCount() > 0) {
            tabelaClientes.getColumnModel().getColumn(0).setResizable(false);
            tabelaClientes.getColumnModel().getColumn(1).setResizable(false);
            tabelaClientes.getColumnModel().getColumn(1).setPreferredWidth(25);
            tabelaClientes.getColumnModel().getColumn(2).setResizable(false);
            tabelaClientes.getColumnModel().getColumn(2).setPreferredWidth(25);
            tabelaClientes.getColumnModel().getColumn(3).setResizable(false);
            tabelaClientes.getColumnModel().getColumn(4).setResizable(false);
            tabelaClientes.getColumnModel().getColumn(4).setPreferredWidth(2);
            tabelaClientes.getColumnModel().getColumn(5).setResizable(false);
            tabelaClientes.getColumnModel().getColumn(6).setResizable(false);
            tabelaClientes.getColumnModel().getColumn(6).setPreferredWidth(5);
        }

        javax.swing.GroupLayout canvasTabelaLayout = new javax.swing.GroupLayout(canvasTabela);
        canvasTabela.setLayout(canvasTabelaLayout);
        canvasTabelaLayout.setHorizontalGroup(
            canvasTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(canvasTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, canvasTabelaLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(50, 50, 50)))
        );
        canvasTabelaLayout.setVerticalGroup(
            canvasTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
            .addGroup(canvasTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(canvasTabelaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(painelTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(16, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout TabEdicaoLayout = new javax.swing.GroupLayout(TabEdicao);
        TabEdicao.setLayout(TabEdicaoLayout);
        TabEdicaoLayout.setHorizontalGroup(
            TabEdicaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabEdicaoLayout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(botaoExcluir)
                .addGap(73, 73, 73)
                .addComponent(botaoAtualizar)
                .addContainerGap(235, Short.MAX_VALUE))
            .addGroup(TabEdicaoLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(canvasTabela, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                .addContainerGap())
        );
        TabEdicaoLayout.setVerticalGroup(
            TabEdicaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TabEdicaoLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(canvasTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TabEdicaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoExcluir)
                    .addComponent(botaoAtualizar))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        TabContainer.addTab("Editar/Excluir", TabEdicao);

        barraMenu.setPreferredSize(new java.awt.Dimension(58, 23));

        barraMenuItemSair.setText("Arquivo");
        barraMenuItemSair.setMinimumSize(new java.awt.Dimension(58, 26));
        barraMenuItemSair.setPreferredSize(new java.awt.Dimension(58, 26));

        menuItemSair.setText("   Sair");
        menuItemSair.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        menuItemSair.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        menuItemSair.setIconTextGap(0);
        menuItemSair.setMargin(new java.awt.Insets(0, 2, 0, 0));
        menuItemSair.setMaximumSize(new java.awt.Dimension(52767, 32767));
        menuItemSair.setMinimumSize(new java.awt.Dimension(0, 24));
        menuItemSair.setPreferredSize(new java.awt.Dimension(55, 24));
        menuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSairActionPerformed(evt);
            }
        });
        barraMenuItemSair.add(menuItemSair);

        barraMenu.add(barraMenuItemSair);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TabContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSairActionPerformed
        JanelaSair.setLocationRelativeTo(null);
        JanelaSair.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_menuItemSairActionPerformed

    private void BotaoSairProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSairProgramaActionPerformed
        System.exit(0);   // TODO add your handling code here:
    }//GEN-LAST:event_BotaoSairProgramaActionPerformed

    private void BotaoNaoSairProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoNaoSairProgramaActionPerformed
        JanelaSair.setVisible(false); // TODO add your handling code here:
    }//GEN-LAST:event_BotaoNaoSairProgramaActionPerformed

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        for (JTextField campo : listaCampos) {
            campo.setText("");
        }
        tabelaClientes.clearSelection();
        botaoExcluir.setEnabled(false);
        botaoAtualizar.setEnabled(false);
        botaoLimpar.setEnabled(false);
        campoCpf.setEnabled(true);
    }//GEN-LAST:event_botaoLimparActionPerformed

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        if (campoNome.getText().equals("")
                || campoTel.getText().equals("")
                || campoCpf.getText().equals("")
                || campoEndereco.getText().equals("")
                || campoNumero.getText().equals("")
                || campoCidade.getText().equals("")
                || campoEstado.getText().equals("")) {
            mensagemErro.setText("Todos os campos devem estar preenchidos!");
            JanelaErro.setLocationRelativeTo(null);
            JanelaErro.setVisible(rootPaneCheckingEnabled);
            tabelaClientes.clearSelection();
        }
        else if (!eNumerico(campoNumero.getText())) {
            mensagemErro.setText("O valor inserido em 'NÃºmero' Ã© invÃ¡lido!");
            JanelaErro.setLocationRelativeTo(null);
            JanelaErro.setVisible(rootPaneCheckingEnabled);
            tabelaClientes.clearSelection();
        }
        else {
            Cliente clientecadastro = new Cliente(campoNome.getText(),
                campoCpf.getText(),
                campoTel.getText(),
                campoCidade.getText(),
                campoEstado.getText(),
                campoEndereco.getText(),
                campoNumero.getText());
            resultadoCadastro = iClienteDao.cadastrar(clientecadastro);
            if (resultadoCadastro) {
                mensagemSucesso.setText("Cliente Cadastrado com Sucesso!");
                JanelaSucesso.setLocationRelativeTo(null);
                JanelaSucesso.setVisible(rootPaneCheckingEnabled);
                for (JTextField campo : listaCampos) {
                    campo.setText("");
                }
                modelo.addRow(new Object[]{clientecadastro.getNome(),
                                           clientecadastro.getCpf(),
                                           clientecadastro.getTel(),
                                           clientecadastro.getEndereco()});
                sorter = new TableRowSorter<>(modelo);
                tabelaClientes.setAutoCreateRowSorter(true);
                tabelaClientes.setRowSorter(sorter);
                sortKeys.add(new RowSorter.SortKey(columnIndexToSort, ASCENDING));
                sorter.setSortKeys(sortKeys);
                sorter.sort();
                tabelaClientes.clearSelection();
                botaoLimpar.setEnabled(false);
                TabContainer.setEnabledAt(1, true);
            }
            else {
                mensagemErro.setText("    Este cliente jÃ¡ estÃ¡ cadastrado!");
                JanelaErro.setLocationRelativeTo(null);
                JanelaErro.setVisible(rootPaneCheckingEnabled);
                tabelaClientes.clearSelection();
            }
        }
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void botaoOkErroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoOkErroActionPerformed
        JanelaErro.setVisible(false);
    }//GEN-LAST:event_botaoOkErroActionPerformed

    private void botaoOkSucessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoOkSucessoActionPerformed
        if (tabelaClientes.getRowCount() == 0) {
            TabContainer.setSelectedIndex(0);
            tabelaClientes.clearSelection();
            TabContainer.setEnabledAt(1, false);
            botaoLimpar.setEnabled(false);
        }
        JanelaSucesso.setVisible(false);
    }//GEN-LAST:event_botaoOkSucessoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        TabGeral.add(painelFormulario);
        barraMenuItemSair.setSize(50, 48);
        TabContainer.setEnabledAt(1, false);
        painelFormulario.setLocation(50, 20);
        painelFormulario.setSize(670, 250);
        ImageIcon icon = new ImageIcon("src/main/java/dsenra/clientIcon.png");
        setIconImage(icon.getImage());        
        jLabel6.setIcon(icon2);
        jLabel12.setIcon(icon3);
        this.setSize(780, 380);
        ListSelectionModel listSelectionModel = tabelaClientes.getSelectionModel();
        listSelectionModel.addListSelectionListener((e) -> {
            botaoExcluir.setEnabled(true);
            botaoAtualizar.setEnabled(true);
            botaoLimpar.setEnabled(true);
            if (tabelaClientes.isFocusOwner()) {
                linhaSelecionada = tabelaClientes.getSelectedRow();
                String cpf = String.valueOf(tabelaClientes.getValueAt(linhaSelecionada, 1)) ;
                Cliente cliente = this.iClienteDao.consultar(cpf);
                campoNome.setText(cliente.getNome());
                campoCpf.setText(String.valueOf(cliente.getCpf()));
                campoTel.setText(String.valueOf(cliente.getTel()));
                campoCidade.setText(cliente.getCidade());
                campoEstado.setText(cliente.getEstado());
                campoEndereco.setText(cliente.getEndereco());
                campoNumero.setText(String.valueOf(cliente.getNumero()));
                for (JTextField campo : listaCampos) {
                    campo.setEnabled(true);
                }
                campoCpf.setEnabled(false);
            }
        });
        DocumentListener myListener = new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                changeHandler();
            };

            @Override
            public void insertUpdate(DocumentEvent e) {
                changeHandler();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                changeHandler();
            }
        };
        for (JTextField campo : listaCampos) {
            campo.getDocument().addDocumentListener(myListener);
        }
        
        for (JTextField campo : listaCampos) {
            campo.setBorder(BorderFactory.createCompoundBorder(
  campo.getBorder(), 
  BorderFactory.createEmptyBorder(2, 5, 2, 5)));
        }
        
        ChangeListener changeListener = (ChangeEvent changeEvent) -> {
            for (JTextField campo : listaCampos) {
                campo.setText("");
            }
            JTabbedPane sourceTabbedPane = (JTabbedPane) changeEvent.getSource();
            int index = sourceTabbedPane.getSelectedIndex();
            if (sourceTabbedPane.getTitleAt(index).equals("Editar/Excluir")) {
                TabEdicao.add(painelFormulario);
                painelFormulario.setLocation(30, 180);
                canvasTabela.setLocation(250,10);
                this.setSize(780, 500);
                TabContainer.setSize(780, 750);
                TabContainer.setMinimumSize(new Dimension(780, 450));
                TabEdicao.setSize(780, 750);
                for (JTextField campo : listaCampos) {
                    campo.setEnabled(false);
                }
                tabelaClientes.clearSelection();
                botaoAtualizar.setEnabled(false);
                botaoExcluir.setEnabled(false);
            }
            else {
                for (JTextField campo : listaCampos) {
                    campo.setEnabled(true);
                }
                TabGeral.add(painelFormulario);
                painelFormulario.setLocation(50, 20);
                painelFormulario.setSize(670, 250);
                this.setSize(780, 380);
                TabContainer.setSize(780, 360);
                TabContainer.setMinimumSize(new Dimension(780, 360));
                botaoAtualizar.setEnabled(false);
                botaoExcluir.setEnabled(false);
            }
        };
        TabContainer.addChangeListener(changeListener);
        
    }//GEN-LAST:event_formWindowOpened

    private void tabelaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaClientesMouseClicked

    }//GEN-LAST:event_tabelaClientesMouseClicked

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
        
        JDialog dialog = new JDialog();
        dialog.setAlwaysOnTop(true);
        String[] respostas = { "Sim", "NÃ£o" };    
        int confirmacaoResposta = JOptionPane.showOptionDialog(dialog, "Remover o cliente selecionado?", "Confirmar RemoÃ§Ã£o",
                JOptionPane.PLAIN_MESSAGE, 0, icon4, respostas, respostas[1]);
        if (confirmacaoResposta == 0) {
            String cpf = campoCpf.getText();
            for (JTextField campo : listaCampos) {
                campo.setText("");
            }
            iClienteDao.excluir(cpf);
            modelo.removeRow(tabelaClientes.convertRowIndexToModel(linhaSelecionada));
            botaoExcluir.setEnabled(false);
            botaoAtualizar.setEnabled(false);
            tabelaClientes.clearSelection();
            if (tabelaClientes.getRowCount() == 0) modelo.setNumRows(0);
            sorter = new TableRowSorter<>(modelo);
            tabelaClientes.setAutoCreateRowSorter(true);
            tabelaClientes.setRowSorter(sorter);
            sortKeys.add(new RowSorter.SortKey(columnIndexToSort, ASCENDING));
            sorter.setSortKeys(sortKeys);
            sorter.sort();
            mensagemSucesso.setText("Cliente Removido com Sucesso!");
            JanelaSucesso.setLocationRelativeTo(null);
            JanelaSucesso.setVisible(rootPaneCheckingEnabled);
        }
        
        
    }//GEN-LAST:event_botaoExcluirActionPerformed

    private void tabelaClientesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabelaClientesFocusGained
        
    }//GEN-LAST:event_tabelaClientesFocusGained

    private void tabelaClientesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaClientesKeyTyped

    }//GEN-LAST:event_tabelaClientesKeyTyped

    private void botaoAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtualizarActionPerformed
        String cpf = campoCpf.getText();
        Cliente clienteAtual = iClienteDao.consultar(cpf);
        if (campoNome.getText().equals("") ||
            campoTel.getText().equals("") ||
            campoEndereco.getText().equals("") ||
            campoNumero.getText().equals("") ||
            campoCidade.getText().equals("") ||
            campoEstado.getText().equals("")) {
                mensagemErro.setText("Todos os campos sÃ£o obrigatÃ³rios!");
                JanelaErro.setLocationRelativeTo(null);
                JanelaErro.setVisible(rootPaneCheckingEnabled);
        }
        else if (!eNumerico(campoNumero.getText())) {
            mensagemErro.setText("O valor inserido em 'NÃºmero' Ã© invÃ¡lido!");
            JanelaErro.setLocationRelativeTo(null);
            JanelaErro.setVisible(rootPaneCheckingEnabled);
        }
        else if (clienteAtual.getNome().equals(campoNome.getText()) &&
            clienteAtual.getTel().equals(campoTel.getText()) &&
            clienteAtual.getEndereco().equals(campoEndereco.getText()) &&
            clienteAtual.getNumero().equals(Long.valueOf(campoNumero.getText())) &&
            clienteAtual.getCidade().equals(campoCidade.getText()) &&
            clienteAtual.getEstado().equals(campoEstado.getText())) {
                mensagemErro.setText("       Nenhum valor foi alterado!");
                JanelaErro.setLocationRelativeTo(null);
                JanelaErro.setVisible(rootPaneCheckingEnabled);
        }
        else {
            JDialog dialog = new JDialog();
            dialog.setAlwaysOnTop(true);
            String[] respostas = { "Sim", "NÃ£o" };    
            int confirmacaoResposta = JOptionPane.showOptionDialog(dialog, "Confirmar as alteraÃ§Ãµes?", "Confirmar AlteraÃ§Ã£o",
                    JOptionPane.PLAIN_MESSAGE, 0, icon4, respostas, respostas[1]);
            if (confirmacaoResposta == 0) {
                Cliente clienteAlterado = new Cliente(campoNome.getText(),
                    campoCpf.getText(),
                    campoTel.getText(),
                    campoCidade.getText(),
                    campoEstado.getText(),
                    campoEndereco.getText(),
                    campoNumero.getText());
                iClienteDao.alterar(clienteAlterado);
                tabelaClientes.setValueAt(campoNome.getText(), linhaSelecionada, 0);
                tabelaClientes.setValueAt(campoTel.getText(), linhaSelecionada, 2);
                tabelaClientes.setValueAt(campoEndereco.getText(), linhaSelecionada, 3);
                for (JTextField campo : listaCampos) {
                    campo.setText("");
                }
                botaoExcluir.setEnabled(false);
                botaoAtualizar.setEnabled(false);
                tabelaClientes.clearSelection();
                sorter.sort();
                for (JTextField campo : listaCampos) {
                campo.setEnabled(false);
                }
                mensagemSucesso.setText("Cliente Atualizado com Sucesso!");
                JanelaSucesso.setLocationRelativeTo(null);
                JanelaSucesso.setVisible(rootPaneCheckingEnabled); 
            }
            else {
                
            }
        }
    }//GEN-LAST:event_botaoAtualizarActionPerformed

    private void botaoConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConfirmarActionPerformed

    }//GEN-LAST:event_botaoConfirmarActionPerformed

    private void botaoNaoConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoNaoConfirmaActionPerformed

    }//GEN-LAST:event_botaoNaoConfirmaActionPerformed

    private void campoNomePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_campoNomePropertyChange
        
    }//GEN-LAST:event_campoNomePropertyChange

    private void TabContainerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_TabContainerPropertyChange
        
    }//GEN-LAST:event_TabContainerPropertyChange

    private void campoCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCpfActionPerformed

    private void campoNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNumeroActionPerformed

    private void campoEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoEnderecoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiCadastroClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GuiCadastroClientes().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoNaoSairPrograma;
    private javax.swing.JButton BotaoSairPrograma;
    private javax.swing.JDialog JanelaConfirmar;
    private javax.swing.JDialog JanelaErro;
    private javax.swing.JDialog JanelaSair;
    private javax.swing.JDialog JanelaSucesso;
    private javax.swing.JTabbedPane TabContainer;
    private javax.swing.JPanel TabEdicao;
    private javax.swing.JPanel TabGeral;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JMenu barraMenuItemSair;
    private javax.swing.JButton botaoAtualizar;
    private javax.swing.JButton botaoConfirmar;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoNaoConfirma;
    private javax.swing.JButton botaoOkErro;
    private javax.swing.JButton botaoOkSucesso;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JTextField campoCidade;
    private javax.swing.JTextField campoCpf;
    private javax.swing.JTextField campoEndereco;
    private javax.swing.JTextField campoEstado;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoNumero;
    private javax.swing.JTextField campoTel;
    private javax.swing.JPanel canvasTabela;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel mensagemConfirmacao;
    private javax.swing.JLabel mensagemErro;
    private javax.swing.JLabel mensagemSucesso;
    private javax.swing.JMenuItem menuItemSair;
    private javax.swing.JPanel painelFormulario;
    private javax.swing.JScrollPane painelTabela;
    private javax.swing.JTable tabelaClientes;
    // End of variables declaration//GEN-END:variables

    private void initCustomComponents() {
        modelo.addColumn("Nome");
        modelo.addColumn("CPF");
        modelo.addColumn("Telefone");
        modelo.addColumn("EndereÃ§o");
        tabelaClientes.setModel(modelo);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        tabelaClientes.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tabelaClientes.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        tabelaClientes.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        tabelaClientes.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        tabelaClientes.setDefaultEditor(Object.class, null);
    }
}
